package rules

import tercerhombre.personaje.Personaje;
import tercerhombre.propiedades.*;
import tercerhombre.io.Buffer;

rule "martins va cementerio" agenda-group "g1"
no-loop true
	when
		martins : Personaje( nombre == Personaje.martins, ubicacion == Ubicacion.CASALIME, estadoSalud == EstadoSalud.VIVO )
		
		b : Buffer()
	then

		modify(martins){
			setUbicacion(Ubicacion.CEMENTERIO);
		}
		
		modify(b){
			append(Personaje.martins+" va a"+martins.getUbicacion().toString()+". ");
		};
		
end

rule "inserta calloway"
no-loop true
	when
		not Personaje( nombre == Personaje.calloway)
	then
		insert(Personaje.nuevo().
    	setNombre(Personaje.calloway).
    	setGenero(Genero.HOMBRE).
    	setActividad(ActividadLegal.POLICIA).
    	setEstadoSalud(EstadoSalud.VIVO).
    	setNacionalidad(Nacionalidad.GRANBRETANA).
    	setUbicacion(Ubicacion.CEMENTERIO));
    	
end

rule "martins conoce calloway" agenda-group "g1"
no-loop true
    when
        martins : Personaje( nombre == Personaje.martins, ubicacion == Ubicacion.CEMENTERIO, estadoSalud == EstadoSalud.VIVO  )
        calloway : Personaje( nombre == Personaje.calloway, ubicacion == Ubicacion.CEMENTERIO, estadoSalud == EstadoSalud.VIVO  )
        
        b : Buffer()
    then
        
        modify(martins){
		   getConoce_a().add(calloway);
		};
		modify(calloway){
		   getConoce_a().add(martins);
		};

        modify(b){
			append(Personaje.martins+" conoce a "+Personaje.calloway+". ").
			append(Personaje.calloway+" conoce a "+Personaje.martins+". ");
		};
		
		
		
end 

rule "van al pub" agenda-group "g1"
no-loop true
	when
		martins : Personaje( nombre == Personaje.martins, ubicacion == Ubicacion.CEMENTERIO, estadoSalud == EstadoSalud.VIVO  )
        calloway : Personaje( nombre == Personaje.calloway, ubicacion == Ubicacion.CEMENTERIO, estadoSalud == EstadoSalud.VIVO  )
        
        // si ambos se conocen
        Personaje( nombre == Personaje.martins ) from calloway.conoce_a
        Personaje( nombre == Personaje.calloway ) from martins.conoce_a
        
        b : Buffer()
	then
        
        modify(martins){
		   setUbicacion(Ubicacion.PUB);
		};
		modify(calloway){
		   setUbicacion(Ubicacion.PUB);
		};

        modify(b){
			append(Personaje.martins+" va a"+martins.getUbicacion().toString()+". ").
			append(Personaje.calloway+" va a"+calloway.getUbicacion().toString()+". ");
		};
		
    	
end

rule "inserta paine"
no-loop true
	when
		not Personaje( nombre == Personaje.paine)
	then
	
    	insert(Personaje.nuevo().
    	setNombre(Personaje.paine).
    	setGenero(Genero.HOMBRE).
    	setActividad(ActividadLegal.POLICIA).
    	setEstadoSalud(EstadoSalud.VIVO).
    	setNacionalidad(Nacionalidad.GRANBRETANA).
    	setUbicacion(Ubicacion.PUB));
    	
end

rule "martins conoce a paine" agenda-group "g1"
no-loop true
	when
		martins : Personaje( nombre == Personaje.martins, ubicacion == Ubicacion.PUB, estadoSalud == EstadoSalud.VIVO )
		paine : Personaje( nombre == Personaje.paine, ubicacion == Ubicacion.PUB, estadoSalud == EstadoSalud.VIVO )
		calloway : Personaje( nombre == Personaje.calloway, ubicacion == Ubicacion.PUB, estadoSalud == EstadoSalud.VIVO)
		
		b : Buffer()
		
	then
		
		modify(paine){
		   getConoce_a().add(martins);
		};
		modify(paine){
		   getConoce_a().add(calloway);
		};
		modify(paine){
		   getTrabaja_con().add(calloway);
		};
		modify(calloway){
		   getConoce_a().add(paine);
		};
		modify(calloway){
		   getTrabaja_con().add(paine);
		};
		modify(martins){
		   getConoce_a().add(paine);
		};
		
		modify(b){
			append(Personaje.martins+" conoce a "+Personaje.paine+". ").
	        append(Personaje.calloway+" conoce a "+Personaje.paine+". ").
	        append(Personaje.paine+" conoce a "+Personaje.calloway+". ").
	        append(Personaje.paine+" conoce a "+Personaje.martins+". ").
	        append(Personaje.paine+" trabaja con "+Personaje.calloway+". ").
	        append(Personaje.calloway+" trabaja con "+Personaje.paine+". ");
		};
	
end

rule "martins va a hotel" agenda-group "g1"
no-loop true
	when
		martins : Personaje( nombre == Personaje.martins, ubicacion == Ubicacion.PUB, estadoSalud == EstadoSalud.VIVO )
		
		b : Buffer()
	then
		
		modify(martins){
		   setUbicacion(Ubicacion.HOTELSACHER);
		};
		
		modify(b){
			append(Personaje.martins+" va a"+martins.getUbicacion().toString()+". ");
		};
		
		insert(Personaje.nuevo().
		setNombre(Personaje.crabbin).
		setGenero(Genero.HOMBRE).
		setActividad(ActividadLegal.DIRECTIVO).
		setEstadoSalud(EstadoSalud.VIVO).
		setNacionalidad(Nacionalidad.GRANBRETANA).
		setUbicacion(Ubicacion.HOTELSACHER));
		
end

rule "martins conoce crabbin" agenda-group "g1"
no-loop true
	when
		martins : Personaje( nombre == Personaje.martins, ubicacion == Ubicacion.HOTELSACHER, estadoSalud == EstadoSalud.VIVO )
		crabbin : Personaje( nombre == Personaje.crabbin, ubicacion == Ubicacion.HOTELSACHER, estadoSalud == EstadoSalud.VIVO )
		
		b : Buffer()
	then
		
		modify(martins){
		   getConoce_a().add(crabbin);
		};
		
		modify(crabbin){
		   getConoce_a().add(martins);
		};
		
        modify(b){
			append(Personaje.martins+" conoce a "+Personaje.crabbin+". ").
			append(Personaje.crabbin+" conoce a "+Personaje.martins+". ");
		};
		
		modify(crabbin){
		   setUbicacion(null);
		};

end

rule "insertar kurtz" agenda-group "g1"
no-loop true
	when
	
		not Personaje( nombre == Personaje.kurtz)

	then
		
		insert(Personaje.nuevo().
     	setNombre(Personaje.kurtz).
     	setGenero(Genero.HOMBRE).
     	setActividad(null).
     	setEstadoSalud(EstadoSalud.VIVO).
     	setNacionalidad(Nacionalidad.AUSTRIA).
     	setUbicacion(Ubicacion.CAFEMOZART));

     	
end

rule "martins va cafe mozart" agenda-group "g1"
no-loop true
	when
		martins : Personaje( nombre == Personaje.martins, ubicacion == Ubicacion.HOTELSACHER, estadoSalud == EstadoSalud.VIVO )
		kurtz: Personaje( nombre == Personaje.kurtz, estadoSalud == EstadoSalud.VIVO )
        
        b : Buffer()
	then
		
		modify(martins){
		   setUbicacion(Ubicacion.CAFEMOZART);
		};
		
		
		modify(b){
			append(Personaje.martins+" va a"+martins.getUbicacion().toString()+". ");
		};

     	System.out.println("va cafe mozart");

end

rule "martins conoce kurtz" agenda-group "g1"
no-loop true
	when
		martins : Personaje( nombre == Personaje.martins, ubicacion == Ubicacion.CAFEMOZART, estadoSalud == EstadoSalud.VIVO )
		kurtz : Personaje( nombre == Personaje.kurtz, ubicacion == Ubicacion.CAFEMOZART, estadoSalud == EstadoSalud.VIVO )
		lime : Personaje( nombre == Personaje.lime)
		
		b : Buffer()
		
	then
	
		modify(martins){
		   getConoce_a().add(kurtz);
		};
		
		modify(kurtz){
		   getConoce_a().add(martins);
		};
		
		modify(kurtz){
		   getConoce_a().add(lime);
		};
		
		modify(kurtz){
		   getAmigo_de().add(lime);
		};
		
		modify(lime){
		   getConoce_a().add(kurtz);
		};
		
		modify(lime){
		   getAmigo_de().add(kurtz);
		};
		
		modify(b){
			append(Personaje.martins+" conoce a "+Personaje.kurtz+". ").
	        append(Personaje.kurtz+" conoce a "+Personaje.martins+". ").
	        append(Personaje.kurtz+" conoce a "+Personaje.lime+". ").
	        append(Personaje.kurtz+" es amigo de "+Personaje.lime+". ").
	        append(Personaje.lime+" conoce a "+Personaje.kurtz+". ").
	        append(Personaje.lime+" es amigo de "+Personaje.kurtz+". ");
		};
		
		System.out.println("conoce a kurtz");
		
		
end